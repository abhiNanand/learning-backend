To **read environment variables in Node.js**, follow these **3 simple steps**:

---

## ✅ 1. **Install `dotenv` package (only if using `.env` file)**

 npm install dotenv
 
---

## ✅ 2. **Create a `.env` file in the root of your project**

```env
PORT=5000
DB_URL=mongodb://localhost:27017/mydb
JWT_SECRET=supersecret
```

---

## ✅ 3. **Load the `.env` file in your Node.js app**

At the top of your entry file (e.g., `index.js` or `app.js`):

 
import dotenv from 'dotenv';
dotenv.config();

// or if using CommonJS
// const dotenv = require('dotenv');
// dotenv.config();

// Accessing environment variables
console.log(process.env.PORT);        // Output: 5000
console.log(process.env.DB_URL);      // Output: mongodb://localhost:27017/mydb
console.log(process.env.JWT_SECRET);  // Output: supersecret
```

---
 
| Rule                                      | Reason                                  |
| ----------------------------------------- | --------------------------------------- |
| `.env` file should be in **project root** | So `dotenv.config()` can find it easily |
| **Restart** server after changing `.env`  | Node reads env only once on startup     |
| Add `.env` to `.gitignore`                | Prevent leaking secrets to GitHub       |

 
dotenv.config() reads the .env file and sets environment variables in process.env.
process.env is globally available throughout the entire Node.js app after that.
So, no need to call dotenv.config() again in other files.